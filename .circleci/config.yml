defaults: &defaults
  working_directory: ~/app
  docker:
    - image: circleci/node:12-browsers

version: 2.1
jobs:
  node10:
    working_directory: ~/app
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - run: npm i
      - run: npm t
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - save_cache:
          key: install-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - ./packages
  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Check code syntax
          command: npm run lint -- --fix
      - run:
          name: Update changes
          command: curl ci-cd.net/v1/git/update | bash
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - restore_cache:
          key: install-cache-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Test
          command: npm t
          environment:
            MOCHA_FILE: junit/test-results.xml
          when: always
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit
      - run:
          name: Test
          command: npm run testes6
  danger:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Code review conventions (Danger)
          command: npx dangerfile
  readme:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - restore_cache:
          key: install-cache-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Create this repo's readme
          command: npm run readme
      - run:
          name: Set git user
          command: curl ci-cd.net/v1/git/user | bash -s a1vy a01101100vy@gmail.com
      - run:
          name: Update changes
          command: curl ci-cd.net/v1/git/update | bash
  dist:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - restore_cache:
          key: install-cache-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Create distribution files
          command: npm run dist
      - save_cache:
          key: bundle-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - ./packages
  publish:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - restore_cache:
          key: bundle-cache-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Set NPM tokens
          command: echo -e $NPMRC > ~/.npmrc
      - run:
          name: Install published
          command: sudo npm i -g published
      - run:
          name: Publish to NPM
          command: npm run publish-packages
  docs:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - restore_cache:
          key: install-cache-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Create the docs
          command: npm run doc
      - run:
          name: Set git user
          command: curl ci-cd.net/v1/git/user | bash -s a1vy a01101100vy@gmail.com
      - run:
          name: Push to gh-pages
          command: curl ci-cd.net/v1/gh/pages | bash -s docs/.
      - run:
          name: CloufFlare - Purge homepage
          command: |
            curl -X DELETE "https://api.cloudflare.com/client/v4/zones/${CF_ZONE}/purge_cache" \
             -H "X-Auth-Email: ${CF_EMAIL}" \
             -H "X-Auth-Key: ${CF_API_KEY}" \
             -H "Content-Type: application/json" \
             --data '{"files":["https://omrilotan.com/mono"]}'
  omrilotan:
    <<: *defaults
    steps:
      - run:
          name: Trigger build for omrilotan.com
          command: |
            curl -u $CIRCLECI_API_TOKEN: \
                 -d build_parameters[CIRCLE_JOB]=build \
                 https://circleci.com/api/v1.1/project/github/omrilotan/omrilotan.github.io/tree/build
  autoupdate:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Update all dependencies
          command: npm update && npm run autoupdate
      - run:
          name: Create a new branch
          command: git checkout -b maintenance/$CIRCLE_BUILD_NUM
      - run:
          name: Open pull request
          command: curl ci-cd.net/v1/gh/add-pr | bash -s $GIT_AUTH_TOKEN "â¬† Dependencies updates"

workflows:
  version: 2.1
  ci-cd:
    jobs:
      - install:
          context: globalenv
      - node10:
          context: globalenv
      - lint:
          requires:
            - install
      - test:
          context: globalenv
          requires:
            - install
      - dist:
          requires:
            - install
      - danger:
          context: globalenv
          requires:
            - install
          filters:
            branches:
              ignore:
                - master
      - readme:
          requires:
            - test
            - lint
      - publish:
          context: globalenv
          requires:
            - test
            - lint
            - dist
            - node10
      - docs:
          context: globalenv
          requires:
            - publish
          filters:
            branches:
              only:
                - master
      - omrilotan:
          context: globalenv
          requires:
            - publish
          filters:
            branches:
              only:
                - master
  scheduled:
    triggers:
      - schedule:
          cron: "0 12 * * 2"
          filters:
            branches:
              only:
                - master
    jobs:
      - autoupdate:
          context: globalenv

experimental:
  notify:
    branches:
      only:
        - master
